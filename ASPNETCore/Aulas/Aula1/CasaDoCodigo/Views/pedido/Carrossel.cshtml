@{ 
    ViewData["Title"] = "Carrossel";
}

@model List<Produto>;
@* incluir a diretiva @model, que exige o tipo de modelo que iremos injetar na view, isto é, a lista de produtos. *@

<h3>Catálogo</h3>

@*@foreach (var produto in Model)
    {
        <div>@produto.Nome</div>
    }*@
@* o @ indica que vai ser inserido uma codigo csharp dentro do html  *@

<div id="my-carousel" class="carousel slide" data-ride="carousel">
    <!-- Wrapper for slides -->
    <div class="carousel-inner" role="listbox">

        @{
            const int TAMANHO_PAGINA = 4;

            int paginas = (int)Math.Ceiling((double)Model.Count() / TAMANHO_PAGINA);
        }

        @for (int pagina = 0; pagina < paginas; pagina++)
        {

            <div class="item @(pagina == 0 ? "active" : "")">
                <div class="row">

                    @{
                        var produtosDaPagina = Model.Skip(pagina * TAMANHO_PAGINA).Take(TAMANHO_PAGINA);
                    }

                    @foreach (var produto in produtosDaPagina)
                    {

                        <div class="col-md-3 col-sm-3 col-lg-3">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <img class="img-produto-carrossel" src="/images/produtos/large_@(produto.Nome).jpg" />
                                </div>
                                <div class="panel-footer produto-footer">
                                    <div class="produto-nome">@produto.Codigo</div>
                                    <div><h4><strong>@produto.Preco</strong></h4></div>
                                    <div class="text-center">
                                        <a asp-action="carrinho"
                                           asp-route-codigo="@produto.Nome"
                                           class="btn btn-success">Adicionar</a>
                                        @* Ao usarmos <a asp- class="btn btn-success">Adicionar</a>, por exemplo, o ASP.NET Core MVC
                                            nos dá uma lista de opções de atributos de tag helper, sendo uma delas asp-controller, que
                                            escolheremos porque queremos navegar para uma action de um determinado controller, neste caso,
                                            pedido. Também usaremos asp-action para navegarmos à página do carrinho
                                            Note que, com isso, o Visual Studio mudou a cor da âncora e a deixou em negrito, indicando
                                            que o elemento a não é mais uma âncora HTML, e sim uma
                                            tag helper, ou seja, um componente do ASP.NET Core 
                                            utilizado pelo mecanismo de renderização Razor para 
                                            a criação de HTML de maneira mais natural.*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>

        }
    </div>

    <!-- Controls -->
    <a class="left carousel-control" href="#my-carousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#my-carousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>